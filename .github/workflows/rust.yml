name: CI/CD Release

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build_for_release:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive_ext: .tar.gz
          - os: macos-latest
            target: x86_64-apple-darwin
            archive_ext: .tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive_ext: .zip

    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install 7-Zip (Windows)
        if: runner.os == 'Windows'
        run: choco install 7zip.install

      - name: Build Release Binary
        run: cargo build --release --verbose --target ${{ matrix.target }}

      - name: Prepare Artifact Folder
        run: |
          mkdir package
          BINARY_NAME=spooling

          if [ "${{ runner.os }}" = "Windows" ]; then
            cp target/${{ matrix.target }}/release/${BINARY_NAME}.exe package/
          else
            cp target/${{ matrix.target }}/release/${BINARY_NAME} package/
          fi

          cp -r fonts package/

        shell: bash

      - name: Compress Artifacts
        run: |
          BINARY_NAME=spooling
          ARCHIVE_NAME=${BINARY_NAME}-${{ matrix.target }}${{ matrix.archive_ext }}

          if [ "${{ runner.os }}" = "Windows" ]; then
            powershell Compress-Archive -Path package\* -DestinationPath $ARCHIVE_NAME
          else
            tar -czvf $ARCHIVE_NAME -C package .
          fi

          echo "ASSET_PATH=$ARCHIVE_NAME" >> $GITHUB_ENV

        shell: bash

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.sha }}-${{ matrix.os }}
          path: ${{ env.ASSET_PATH }}

  create_github_release:
    needs: build_for_release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            # Release Notes for ${{ github.ref_name }}

            This is an automated release.

            ## Changes

            * Add your release notes here.
            * For example, you can list new features, bug fixes, or improvements.
          draft: false
          prerelease: false

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/*.tar.gz
                 ./artifacts/**/*.zip
